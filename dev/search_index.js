var documenterSearchIndex = {"docs":
[{"location":"index.html#GrapheneQFT.jl","page":"Index","title":"GrapheneQFT.jl","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"  GrapheneQFT","category":"page"},{"location":"index.html#GrapheneQFT","page":"Index","title":"GrapheneQFT","text":"This package provides provides a set of functions to facilitate the field-theoretic treatment of monolayer graphene using the tight-binding model. The Hamiltonian employed by this package includes only the nearest-neighbor hopping term with t = 28eV. The derivation of the formalism is available here.\n\n\n\n\n\n","category":"module"},{"location":"index.html#Module-Index","page":"Index","title":"Module Index","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"Modules = [GrapheneQFT]\nOrder   = [:constant, :type, :function, :macro]\n","category":"page"},{"location":"index.html#Detailed-API","page":"Index","title":"Detailed API","text":"","category":"section"},{"location":"index.html","page":"Index","title":"Index","text":"Modules = [GrapheneQFT]\nOrder   = [:constant, :type, :function, :macro]","category":"page"},{"location":"index.html#GrapheneQFT.Coupling","page":"Index","title":"GrapheneQFT.Coupling","text":"struct Coupling\n    V::ComplexF64           # Coupling to a graphene atom\n    coord::GrapheneCoord    # Location of the graphene atom\nend\n\nA structure describing the coupling V (in eV) between an impurity state and a graphene atom at coord.\n\n\n\n\n\n","category":"type"},{"location":"index.html#GrapheneQFT.GrapheneCoord","page":"Index","title":"GrapheneQFT.GrapheneCoord","text":"struct GrapheneCoord\n    u::Int\n    v::Int\n    sublattice::Sublattice\nend\n\nLattice coordinate of a carbon atom, generated using graphene_A or graphene_B. Each coordinate contains the sublattice index, as well as the integer coefficients of the two basis vectors dtimes(pm 1 hatx + sqrt3haty)  2, where d = 246Å is the graphene lattice constant.\n\n\n\n\n\n","category":"type"},{"location":"index.html#GrapheneQFT.GrapheneSystem","page":"Index","title":"GrapheneQFT.GrapheneSystem","text":"struct GrapheneSystem\n    μ::Float64                              # Chemical potential\n    T::Float64                              # Temperature\n    Δ::Array{ComplexF64,2}                     # Δ matrix\n    V::Array{ComplexF64,2}                     # V Matrix\n    scattering_atoms::Vector{GrapheneCoord} # List of all perturbed atoms\n    imps::Vector{Float64}                   # Impurity energies\nend\n\nA structure describing the perturbed graphene system. See mk_GrapheneSystem for details.\n\n\n\n\n\n","category":"type"},{"location":"index.html#GrapheneQFT.ImpurityState","page":"Index","title":"GrapheneQFT.ImpurityState","text":"struct ImpurityState\n    ϵ::Float64                  # Impurity state energy\n    coupling::Vector{Coupling}  # Coupling array for the impurity\nend\n\nA structure describing an impurity state with energy ϵ (in eV) and containing a list of all its couplings to graphene atoms.\n\n\n\n\n\n","category":"type"},{"location":"index.html#GrapheneQFT.Location","page":"Index","title":"GrapheneQFT.Location","text":"struct Location\n    x::Float64\n    y::Float64\n    z::Float64\nend\n\nA structure describing a point in 3D space, with the lengths in Å\n\n\n\n\n\n","category":"type"},{"location":"index.html#GrapheneQFT.Perturbation","page":"Index","title":"GrapheneQFT.Perturbation","text":"struct Perturbation\n    pert::Dict{Tuple{GrapheneCoord,GrapheneCoord},ComplexF64}\nend\n\nA structure wrapping a dictionary describing the coupling between graphene atoms and local potential. See new_perturbation() and add_perturbation for more details.\n\n\n\n\n\n","category":"type"},{"location":"index.html#GrapheneQFT.G_R-Tuple{Any, GrapheneQFT.GrapheneCoord, GrapheneQFT.GrapheneCoord, GrapheneQFT.GrapheneSystem}","page":"Index","title":"GrapheneQFT.G_R","text":"G_R(z, a1::GrapheneCoord, a2::GrapheneCoord, s::GrapheneSystem)\n\nThe full real-space graphene Green's function in the presence of defects as a function of complex energy z.\n\nArguments\n\nz: complex energy\na1: GrapheneCoord of the first atom\na2: GrapheneCoord of the second atom\ns: GrapheneSystem for which G_R is calculated\n\nOutput\n\nComplexF64\n\n\n\n\n\n","category":"method"},{"location":"index.html#GrapheneQFT.add_perturbation-Tuple{GrapheneQFT.Perturbation, GrapheneQFT.GrapheneCoord, GrapheneQFT.GrapheneCoord, ComplexF64}","page":"Index","title":"GrapheneQFT.add_perturbation","text":"function add_perturbation(\n    p::Perturbation,\n    a::GrapheneCoord,\n    b::GrapheneCoord,\n    Δ::ComplexF64,\n)\n\nA function that adds coupling between atoms a and b or, if a == b, an     on-site potential to an existing Perturbation structure. When     adding a coupling between two atoms, two entries are added to the dictionary:     one (a,b)=>Δ and another one (b,a)=>conj(Δ). Passing the same pair more     than once overwrites the previous entries.\n\nArguments\n\np: Perturbation to which an additional element is to be added\na: GrapheneCoord of the first atom\nb: GrapheneCoord of the second atom\nΔ: coupling between the atoms\n\nOutput\n\nPerturbation with the new coupling added\n\n\n\n\n\n","category":"method"},{"location":"index.html#GrapheneQFT.graphene_A-Tuple{Int64, Int64}","page":"Index","title":"GrapheneQFT.graphene_A","text":"graphene_A(u::Int, v::Int)\n\nCreate a GrapheneCoord for an atom belonging to sublattice A at the unit cell (u, v)\n\nArguments\n\nu: coefficient of basis vector dtimes(1 hatx + sqrt3haty)  2\nv: coefficient of basis vector dtimes(-1 hatx + sqrt3haty)  2\n\nOutput\n\nGrapheneCoord of the carbon atom\n\n\n\n\n\n","category":"method"},{"location":"index.html#GrapheneQFT.graphene_B-Tuple{Int64, Int64}","page":"Index","title":"GrapheneQFT.graphene_B","text":"graphene_B(u::Int, v::Int)\n\nCreate a GrapheneCoord for an atom belonging to sublattice B at the unit cell (u, v)\n\nArguments\n\nu: coefficient of basis vector dtimes(1 hatx + sqrt3haty)  2\nv: coefficient of basis vector dtimes(-1 hatx + sqrt3haty)  2\n\nOutput\n\nGrapheneCoord of the carbon atom\n\n\n\n\n\n","category":"method"},{"location":"index.html#GrapheneQFT.mk_GrapheneSystem-Tuple{Float64, Float64, Vector{ImpurityState}, GrapheneQFT.Perturbation}","page":"Index","title":"GrapheneQFT.mk_GrapheneSystem","text":"function mk_GrapheneSystem(\n    μ::Float64,\n    T::Float64,\n    imps::Vector{ImpurityState},\n    p::Perturbation,\n)\n\nA function for constructing GrapheneSystem.\n\nArguments\n\nμ: chemical potential\nT: Temperature\nimps: a list of [ImpurityState]'s\np: Perturbation struct containing the carbon-carbon coupling\n\nOutput\n\nGrapheneSystem with the Δ and V matrix computed from imps and p.\n\nIn addition, a list of all GrapheneCoord that are perturbed and a lise of impurity energies are included.\n\n\n\n\n\n","category":"method"},{"location":"index.html#GrapheneQFT.new_perturbation-Tuple{}","page":"Index","title":"GrapheneQFT.new_perturbation","text":"new_perturbation()\n\nA helper initialization function , giving an empty dictionary wrapped in the     Perturbation structure. The keys for the dictionary are tuples of two     GrapheneCoord, while the values are ComplexF64.\n\nArguments:\n\nNone\n\nOutput:\n\nPerturbation wrapping an empty Dict{Tuple{GrapheneCoord,GrapheneCoord},ComplexF64}\n\n\n\n\n\n","category":"method"},{"location":"index.html#GrapheneQFT.Γ-Tuple{Any, GrapheneQFT.GrapheneSystem}","page":"Index","title":"GrapheneQFT.Γ","text":"Γ(z, s::GrapheneSystem)\n\nThe full impurity Green's function with the correction due to the impurities' interaction with graphene.\n\nArguments\n\nz: complex energy\ns: GrapheneSystem for which Γ_R is calculated\n\nOutput\n\nMatrix{ComplexF64}\n\n\n\n\n\n","category":"method"},{"location":"index.html#GrapheneQFT.δG_R-Tuple{Any, GrapheneQFT.GrapheneCoord, GrapheneQFT.GrapheneCoord, GrapheneQFT.GrapheneSystem}","page":"Index","title":"GrapheneQFT.δG_R","text":"δG_R(z, a1::GrapheneCoord, a2::GrapheneCoord, s::GrapheneSystem)\n\nThe correction to the real-space graphene Green's function in the presence of defects as a function of complex energy z.\n\nArguments\n\nz: complex energy\na1: GrapheneCoord of the first atom\na2: GrapheneCoord of the second atom\ns: GrapheneSystem for which δG_R is calculated\n\nOutput\n\nComplexF64\n\n\n\n\n\n","category":"method"},{"location":"index.html#GrapheneQFT.δΓ-Tuple{Any, GrapheneQFT.GrapheneSystem}","page":"Index","title":"GrapheneQFT.δΓ","text":"δΓ(z, s::GrapheneSystem)\n\nThe correction to the impurity Green's function due to the impurities' interaction with graphene.\n\nArguments\n\nz: complex energy\ns: GrapheneSystem for which δΓ_R is calculated\n\nOutput\n\nMatrix{ComplexF64}\n\n\n\n\n\n","category":"method"}]
}
