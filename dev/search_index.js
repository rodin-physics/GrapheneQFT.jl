var documenterSearchIndex = {"docs":
[{"location":"formalism.html#Formalism","page":"Formalism","title":"Formalism","text":"","category":"section"},{"location":"api.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"Modules = [GrapheneQFT]\nOrder   = [:constant, :type, :function, :macro]","category":"page"},{"location":"api.html#Defect-Free-Graphene","page":"API","title":"Defect-Free Graphene","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"  GrapheneCoord\n  graphene_A\n  graphene_B","category":"page"},{"location":"api.html#GrapheneQFT.GrapheneCoord","page":"API","title":"GrapheneQFT.GrapheneCoord","text":"GrapheneCoord(u::Int, v::Int, sublattice::Sublattice)\n\nLattice coordinate of a carbon atom, generated using graphene_A or graphene_B.\n\nEach coordinate contains the sublattice index A or B, as well as the integer coefficients of the two basis vectors dtimes(pm 1 hatx + sqrt3haty)  2 (u for +, v for -), with d = 246Å as the lattice constant.\n\n\n\n\n\n","category":"type"},{"location":"api.html#GrapheneQFT.graphene_A","page":"API","title":"GrapheneQFT.graphene_A","text":"graphene_A(u::Int, v::Int)\n\nCreate a GrapheneCoord for an atom belonging to sublattice A at the unit cell (u, v).\n\n\n\n\n\n","category":"function"},{"location":"api.html#GrapheneQFT.graphene_B","page":"API","title":"GrapheneQFT.graphene_B","text":"graphene_B(u::Int, v::Int)\n\nCreate a GrapheneCoord for an atom belonging to sublattice B at the unit cell (u, v).\n\n\n\n\n\n","category":"function"},{"location":"api.html#Defect-Manipulation","page":"API","title":"Defect Manipulation","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"  ImpurityState\n  GrapheneSystem\n  mkGrapheneSystem","category":"page"},{"location":"api.html#GrapheneQFT.ImpurityState","page":"API","title":"GrapheneQFT.ImpurityState","text":"ImpurityState(ϵ::Float64, coupling::Vector{Tuple{Float64,GrapheneCoord}})\n\nAn impurity state of energy ϵ (in eV) coupled to the graphene system. The tuples in the coupling field contain all the coupling energies (in eV) and the  corresponding GrapheneCoord's.\n\n\n\n\n\n","category":"type"},{"location":"api.html#GrapheneQFT.GrapheneSystem","page":"API","title":"GrapheneQFT.GrapheneSystem","text":"GrapheneSystem(\n    μ::Float64,\n    T::Float64,\n    Δ::Array{Float64,2},\n    V::Array{Float64,2},\n    scattering_atoms::Vector{GrapheneCoord},\n    imps::Vector{Float64},\n)\n\nA structure describing the perturbed graphene system.\n\nSee also mkGrapheneSystem.\n\n\n\n\n\n","category":"type"},{"location":"api.html#GrapheneQFT.mkGrapheneSystem","page":"API","title":"GrapheneQFT.mkGrapheneSystem","text":"mkGrapheneSystem(\n    μ::Float64,\n    T::Float64,\n    imps::Vector{ImpurityState},\n    pert::Vector{Tuple{GrapheneCoord,GrapheneCoord,Float64}},\n)\n\nConstruct GrapheneSystem.\n\nArguments\n\nμ: chemical potential\nT: temperature\nimps: a list of [ImpurityState]'s\npert: a list of 3-tuples describing the coupling between carbon atoms\n\nWhen supplying pert, ensure that each coordinate pair appears only once as repeated pairs with different couplings will cause eariler values to be overwritten. The order of the coordinates does not matter. A tuple with the same coordinate given twice creates and on-site potential for the coordinate.\n\nThe function constructs a GrapheneSystem with the Δ and V matrix computed from imps and pert. In addition, a list of all GrapheneCoord that are perturbed (scattering_atoms field in GrapheneCoord) and a list of impurity energies (imps field in GrapheneCoord) are included.\n\n\n\n\n\n","category":"function"},{"location":"api.html#Green's-Functions","page":"API","title":"Green's Functions","text":"","category":"section"},{"location":"api.html","page":"API","title":"API","text":"  δG_R\n  G_R\n  δΓ\n  Γ","category":"page"},{"location":"api.html#GrapheneQFT.δG_R","page":"API","title":"GrapheneQFT.δG_R","text":"δG_R(z, a1::GrapheneCoord, a2::GrapheneCoord, s::GrapheneSystem)\n\nThe correction to the real-space graphene Green's function in the presence of defects as a function of complex energy z.\n\nArguments\n\nz: complex energy\na1: GrapheneCoord of the first atom\na2: GrapheneCoord of the second atom\ns: GrapheneSystem for which δG_R is calculated\n\n\n\n\n\n","category":"function"},{"location":"api.html#GrapheneQFT.G_R","page":"API","title":"GrapheneQFT.G_R","text":"G_R(z, a1::GrapheneCoord, a2::GrapheneCoord, s::GrapheneSystem)\n\nThe full real-space graphene Green's function in the presence of defects as a function of complex energy z.\n\nArguments\n\nz: complex energy\na1: GrapheneCoord of the first atom\na2: GrapheneCoord of the second atom\ns: GrapheneSystem for which G_R is calculated\n\n\n\n\n\n","category":"function"},{"location":"api.html#GrapheneQFT.δΓ","page":"API","title":"GrapheneQFT.δΓ","text":"δΓ(z, s::GrapheneSystem)\n\nThe correction to the impurity Green's function due to the impurities' interaction with graphene.\n\nArguments\n\nz: complex energy\ns: GrapheneSystem for which δΓ is calculated\n\n\n\n\n\n","category":"function"},{"location":"api.html#GrapheneQFT.Γ","page":"API","title":"GrapheneQFT.Γ","text":"Γ(z, s::GrapheneSystem)\n\nThe full impurity Green's function with the correction due to the impurities' interaction with graphene.\n\nArguments\n\nz: complex energy\ns: GrapheneSystem for which Γ is calculated\n\n\n\n\n\n","category":"function"},{"location":"index.html#GrapheneQFT.jl","page":"Home","title":"GrapheneQFT.jl","text":"","category":"section"}]
}
